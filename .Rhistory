rvest::html_text() %>%
grep("-", ., value = TRUE) %>%
tibble() %>%
mutate(row_number = row_number()) %>%
filter(row_number >= 1 & row_number <=5) %>%
select(- row_number)
# change the name of the column (from . to "roluri")
names(roluri) <- "roluri"
# split the columns into musician names and roles
realizare_disc <- roluri %>%
separate(col = roluri , into = c("nume_muzician","roluri"), sep = "-") %>%
# add id_disc column (1 because these are the musicians for Iron Maiden album)
mutate(id_disc = rep(1, 5)) %>%
mutate(id_muzician = c(1: 5)) %>%
select(id_disc, id_muzician, nume_muzician, roluri)
return(realizare_disc)
# https://en.wikipedia.org/wiki/Iron_Maiden_(album)
wikipedia_url <- "https://en.wikipedia.org/wiki/Iron_Maiden_(album)"
content <- xml2::read_html(wikipedia_url)
####################
# ID_DISC AND ROLURI
# we will take data from "content"
# 5 musicians
roluri <- content %>%
rvest::html_nodes("ul>li") %>%
rvest::html_text() %>%
grep("-", ., value = TRUE) %>%
tibble() %>%
mutate(row_number = row_number()) %>%
filter(row_number >= 1 & row_number <=5) %>%
select(- row_number)
# change the name of the column (from . to "roluri")
names(roluri) <- "roluri"
# split the columns into musician names and roles
realizare_disc <- roluri %>%
separate(col = roluri , into = c("nume_muzician","roluri"), sep = "-") %>%
# add id_disc column (1 because these are the musicians for Iron Maiden album)
mutate(id_disc = rep(1, 5)) %>%
mutate(id_muzician = c(1: 5)) %>%
select(id_disc, id_muzician, nume_muzician, roluri)
Encoding("-")
Encoding("–")
Unicode("-")
unicode("-")
source("alcatuire_disc.R")
alcatuire_disc <- alcatuire_disc()
getwd()
setwd("D:/MASTER/AN_1/Obiecte/Logica BD/WEB SCRAPER R")
library(RPostgreSQL)
library(tidyverse)
# It loads automatically xml2 package
library(rvest)
library(stringr)
library(tibble)
library(lubridate)
source("alcatuire_disc.R")
alcatuire_disc <- alcatuire_disc()
View(alcatuire_disc)
Encoding("–")
Encoding("–")
source("alcatuire_disc.R")
alcatuire_disc <- alcatuire_disc()
source("alcatuire_disc.R")
alcatuire_disc <- alcatuire_disc()
View(alcatuire_disc)
source("alcatuire_disc.R")
alcatuire_disc <- alcatuire_disc()
wikipedia_url <- "https://en.wikipedia.org/wiki/Iron_Maiden_(album)"
content <- xml2::read_html(wikipedia_url)
#########
# ID_DISC
# we have 8 songs on this album
id_disc <- c(rep(1, 8))
########################################
# TITLU_PIESA, COMPOZITORI AND NR_ORDINE
tableAD1 <- content %>%
rvest::html_nodes("table") %>%
.[[4]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
tableAD2 <- content %>%
rvest::html_nodes("table") %>%
.[[5]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
# titlu_piesa + compozitori + nr_ordine
tableAD <- tableAD1 %>%
bind_rows(tableAD2) %>%
mutate(nr_ordine = row_number())
# change the name of the columns
names(tableAD) <- c("titlu_piesa", "compozitori", "nr_ordine")
# delete the quotes from "titlu_piesa" column
tableAD$titlu_piesa <- gsub("\"", "", tableAD$titlu_piesa)
# delete "(Instrumental)"
tableAD$titlu_piesa[5] <- "Transylvania"
# all songs are written and composed by Steven Harris, except where noted.
tableAD$compozitori <- ifelse(tableAD$compozitori == "", "Steve Harris", tableAD$compozitori)
# small change
tableAD$compozitori[2] <- "Steve Harris, Paul Di'Anno"
# small change
tableAD$compozitori[3] <- "Steve Harris, Paul Di'Anno"
# View(tableAD)
########################################################
# FATA_DISC(side one means "Da" and side two means "Nu")
fata_disc <- c("Da", "Da", "Da", "Da", "Nu", "Nu", "Nu", "Nu")
###########
# VOCALISTI
tableAD3 <- content %>%
rvest::html_nodes("ul>li") %>%
rvest::html_text() %>%
grep("vocals", ., value = TRUE) %>%
tibble()
names(tableAD3) <- "vocalisti"
# now we have all the vocalists
tableAD3 <- tableAD3 %>%
separate(col = vocalisti, into = c("vocalisti", "y"), sep = "-") %>%
select(-y) %>%
spread(key = vocalisti, value = vocalisti) %>%
# some strange points...
unite("vocalisti", c(1, 2, 3), sep = ", ")
# replicate 8 times the row obtained above
tableAD3 <- data.frame(vocalisti = rep(tableAD3$vocalisti, 8))
# View(tableAD3)
############
# DURATA_SEC
durata_sec <- content %>%
rvest::html_nodes("table>tbody>tr>td") %>%
rvest::html_text() %>%
# search after the time pattern
grep("\\d:\\d", ., value = TRUE) %>%
# delete quotes
str_replace_all('"', "") %>%
tibble() %>%
mutate(row_number = row_number()) %>%
# filter data
filter(row_number >= 2 & row_number <= 9) %>%
select(-row_number)
names(durata_sec)[1] <- "durata_sec"
# Transform minutes into seconds
durata_sec$durata_sec <- lubridate::period_to_seconds(lubridate::ms(durata_sec$durata_sec))
# View(durata_sec)
###############################################
#### Merge all tibbles / vectors obtained above
###############################################
# firstly, merge the vectors (+ create a common column in order to make merge possible)
idDisc_fataDisc <- tibble(id_disc = id_disc, fata_disc = fata_disc, colComuna = c(1:8))
# merge tibbles
tableAD <- tableAD %>%
mutate(colComuna = c(1:8))
tableAD3 <- tableAD3 %>%
mutate(colComuna = c(1:8))
durata_sec <- durata_sec %>%
mutate(colComuna = c(1:8))
alcatuire_disc <- tableAD %>%
inner_join(tableAD3, by = c("colComuna" = "colComuna")) %>%
inner_join(durata_sec, by = c("colComuna" = "colComuna")) %>%
inner_join(idDisc_fataDisc, by = c("colComuna" = "colComuna")) %>%
select(id_disc, nr_ordine, fata_disc, titlu_piesa, compozitori, vocalisti, durata_sec)
wikipedia_url <- "https://en.wikipedia.org/wiki/Iron_Maiden_(album)"
content <- xml2::read_html(wikipedia_url)
#########
# ID_DISC
# we have 8 songs on this album
id_disc <- c(rep(1, 8))
########################################
# TITLU_PIESA, COMPOZITORI AND NR_ORDINE
tableAD1 <- content %>%
rvest::html_nodes("table") %>%
.[[4]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
tableAD2 <- content %>%
rvest::html_nodes("table") %>%
.[[5]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
# titlu_piesa + compozitori + nr_ordine
tableAD <- tableAD1 %>%
bind_rows(tableAD2) %>%
mutate(nr_ordine = row_number())
# change the name of the columns
names(tableAD) <- c("titlu_piesa", "compozitori", "nr_ordine")
# delete the quotes from "titlu_piesa" column
tableAD$titlu_piesa <- gsub("\"", "", tableAD$titlu_piesa)
# delete "(Instrumental)"
tableAD$titlu_piesa[5] <- "Transylvania"
# all songs are written and composed by Steven Harris, except where noted.
tableAD$compozitori <- ifelse(tableAD$compozitori == "", "Steve Harris", tableAD$compozitori)
# small change
tableAD$compozitori[2] <- "Steve Harris, Paul Di'Anno"
# small change
tableAD$compozitori[3] <- "Steve Harris, Paul Di'Anno"
# View(tableAD)
########################################################
# FATA_DISC(side one means "Da" and side two means "Nu")
fata_disc <- c("Da", "Da", "Da", "Da", "Nu", "Nu", "Nu", "Nu")
###########
# VOCALISTI
tableAD3 <- content %>%
rvest::html_nodes("ul>li") %>%
rvest::html_text() %>%
grep("vocals", ., value = TRUE) %>%
tibble()
names(tableAD3) <- "vocalisti"
tableAD3
tableAD3 <- tableAD3 %>%
separate(col = vocalisti, into = c("vocalisti", "y"), sep = "–", fixed = TRUE)
tableAD3
source("alcatuire_disc.R")
alcatuire_disc <- alcatuire_disc()
wikipedia_url <- "https://en.wikipedia.org/wiki/Iron_Maiden_(album)"
content <- xml2::read_html(wikipedia_url)
#########
# ID_DISC
# we have 8 songs on this album
id_disc <- c(rep(1, 8))
########################################
# TITLU_PIESA, COMPOZITORI AND NR_ORDINE
tableAD1 <- content %>%
rvest::html_nodes("table") %>%
.[[4]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
tableAD2 <- content %>%
rvest::html_nodes("table") %>%
.[[5]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
# titlu_piesa + compozitori + nr_ordine
tableAD <- tableAD1 %>%
bind_rows(tableAD2) %>%
mutate(nr_ordine = row_number())
# change the name of the columns
names(tableAD) <- c("titlu_piesa", "compozitori", "nr_ordine")
# delete the quotes from "titlu_piesa" column
tableAD$titlu_piesa <- gsub("\"", "", tableAD$titlu_piesa)
# delete "(Instrumental)"
tableAD$titlu_piesa[5] <- "Transylvania"
# all songs are written and composed by Steven Harris, except where noted.
tableAD$compozitori <- ifelse(tableAD$compozitori == "", "Steve Harris", tableAD$compozitori)
# small change
tableAD$compozitori[2] <- "Steve Harris, Paul Di'Anno"
# small change
tableAD$compozitori[3] <- "Steve Harris, Paul Di'Anno"
# View(tableAD)
########################################################
# FATA_DISC(side one means "Da" and side two means "Nu")
fata_disc <- c("Da", "Da", "Da", "Da", "Nu", "Nu", "Nu", "Nu")
###########
# VOCALISTI
tableAD3 <- content %>%
rvest::html_nodes("ul>li") %>%
rvest::html_text() %>%
grep("vocals", ., value = TRUE) %>%
tibble()
names(tableAD3) <- "vocalisti"
tableAD3
tableAD3 <- tableAD3 %>%
separate(col = vocalisti, into = c("vocalisti", "y"), sep = "\\–", fixed = TRUE)
tableAD3
source("alcatuire_disc.R")
alcatuire_disc <- alcatuire_disc()
tableAD3
wikipedia_url <- "https://en.wikipedia.org/wiki/Iron_Maiden_(album)"
content <- xml2::read_html(wikipedia_url)
#########
# ID_DISC
# we have 8 songs on this album
id_disc <- c(rep(1, 8))
########################################
# TITLU_PIESA, COMPOZITORI AND NR_ORDINE
tableAD1 <- content %>%
rvest::html_nodes("table") %>%
.[[4]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
tableAD2 <- content %>%
rvest::html_nodes("table") %>%
.[[5]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
# titlu_piesa + compozitori + nr_ordine
tableAD <- tableAD1 %>%
bind_rows(tableAD2) %>%
mutate(nr_ordine = row_number())
# change the name of the columns
names(tableAD) <- c("titlu_piesa", "compozitori", "nr_ordine")
# delete the quotes from "titlu_piesa" column
tableAD$titlu_piesa <- gsub("\"", "", tableAD$titlu_piesa)
# delete "(Instrumental)"
tableAD$titlu_piesa[5] <- "Transylvania"
# all songs are written and composed by Steven Harris, except where noted.
tableAD$compozitori <- ifelse(tableAD$compozitori == "", "Steve Harris", tableAD$compozitori)
# small change
tableAD$compozitori[2] <- "Steve Harris, Paul Di'Anno"
# small change
tableAD$compozitori[3] <- "Steve Harris, Paul Di'Anno"
# View(tableAD)
########################################################
# FATA_DISC(side one means "Da" and side two means "Nu")
fata_disc <- c("Da", "Da", "Da", "Da", "Nu", "Nu", "Nu", "Nu")
###########
# VOCALISTI
tableAD3 <- content %>%
rvest::html_nodes("ul>li") %>%
rvest::html_text() %>%
grep("vocals", ., value = TRUE) %>%
tibble()
names(tableAD3) <- "vocalisti"
tableAD3
tableAD3 %>%
separate(col = vocalisti, into = c("vocalisti", "y"), sep = "[:punct:]")
source("alcatuire_disc.R")
alcatuire_disc <- alcatuire_disc()
View(alcatuire_disc)
wikipedia_url <- "https://en.wikipedia.org/wiki/Iron_Maiden_(album)"
content <- xml2::read_html(wikipedia_url)
#########
# ID_DISC
# we have 8 songs on this album
id_disc <- c(rep(1, 8))
########################################
# TITLU_PIESA, COMPOZITORI AND NR_ORDINE
tableAD1 <- content %>%
rvest::html_nodes("table") %>%
.[[4]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
tableAD2 <- content %>%
rvest::html_nodes("table") %>%
.[[5]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
# titlu_piesa + compozitori + nr_ordine
tableAD <- tableAD1 %>%
bind_rows(tableAD2) %>%
mutate(nr_ordine = row_number())
# change the name of the columns
names(tableAD) <- c("titlu_piesa", "compozitori", "nr_ordine")
# delete the quotes from "titlu_piesa" column
tableAD$titlu_piesa <- gsub("\"", "", tableAD$titlu_piesa)
# delete "(Instrumental)"
tableAD$titlu_piesa[5] <- "Transylvania"
# all songs are written and composed by Steven Harris, except where noted.
tableAD$compozitori <- ifelse(tableAD$compozitori == "", "Steve Harris", tableAD$compozitori)
# small change
tableAD$compozitori[2] <- "Steve Harris, Paul Di'Anno"
# small change
tableAD$compozitori[3] <- "Steve Harris, Paul Di'Anno"
# View(tableAD)
########################################################
# FATA_DISC(side one means "Da" and side two means "Nu")
fata_disc <- c("Da", "Da", "Da", "Da", "Nu", "Nu", "Nu", "Nu")
###########
# VOCALISTI
tableAD3 <- content %>%
rvest::html_nodes("ul>li") %>%
rvest::html_text() %>%
grep("vocals", ., value = TRUE) %>%
tibble()
names(tableAD3) <- "vocalisti"
tableAD3
tableAD3$vocalisti
tableAD3$vocalisti[1]
tableAD3$vocalisti[1][1]
tableAD3$vocalisti[1][2]
format("-")
format("–")
format("–")
source("alcatuire_disc.R")
alcatuire_disc <- alcatuire_disc()
alcatuire_disc
wikipedia_url <- "https://en.wikipedia.org/wiki/Iron_Maiden_(album)"
content <- xml2::read_html(wikipedia_url)
#########
# ID_DISC
# we have 8 songs on this album
id_disc <- c(rep(1, 8))
########################################
# TITLU_PIESA, COMPOZITORI AND NR_ORDINE
tableAD1 <- content %>%
rvest::html_nodes("table") %>%
.[[4]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
tableAD2 <- content %>%
rvest::html_nodes("table") %>%
.[[5]] %>%
rvest::html_table(., fill = TRUE, header = FALSE) %>%
select(X2, X3) %>%
slice(3:6)
# titlu_piesa + compozitori + nr_ordine
tableAD <- tableAD1 %>%
bind_rows(tableAD2) %>%
mutate(nr_ordine = row_number())
# change the name of the columns
names(tableAD) <- c("titlu_piesa", "compozitori", "nr_ordine")
# delete the quotes from "titlu_piesa" column
tableAD$titlu_piesa <- gsub("\"", "", tableAD$titlu_piesa)
# delete "(Instrumental)"
tableAD$titlu_piesa[5] <- "Transylvania"
# all songs are written and composed by Steven Harris, except where noted.
tableAD$compozitori <- ifelse(tableAD$compozitori == "", "Steve Harris", tableAD$compozitori)
# small change
tableAD$compozitori[2] <- "Steve Harris, Paul Di'Anno"
# small change
tableAD$compozitori[3] <- "Steve Harris, Paul Di'Anno"
# View(tableAD)
########################################################
# FATA_DISC(side one means "Da" and side two means "Nu")
fata_disc <- c("Da", "Da", "Da", "Da", "Nu", "Nu", "Nu", "Nu")
###########
# VOCALISTI
tableAD3 <- content %>%
rvest::html_nodes("ul>li") %>%
rvest::html_text() %>%
grep("vocals", ., value = TRUE) %>%
tibble()
names(tableAD3) <- "vocalisti"
tableAD3
tableAD3
names(tableAD3) <- "vocalisti"
tableAD3 %>%
-grep("-" ,vocalisti, value = TRUE)
tableAD3 %>%
-grep("-" , vocalisti, value = TRUE)
tableAD3
-grep("-" , tableAD3, value = TRUE)
-grep("-" , tableAD3, value = TRUE)
tableAD3
source("alcatuire_disc.R")
alcatuire_disc <- alcatuire_disc(specChar = "–")
alcatuire_disc
getwd()
setwd("D:/MASTER/AN_1/Obiecte/Logica BD/WEB SCRAPER R")
library(RPostgreSQL)
library(tidyverse)
# It loads automatically xml2 package
library(rvest)
library(stringr)
library(tibble)
library(lubridate)
# sourcing all functions
source("formatii.R")
source("tari.R")
source("muzicieni.R")
source("discografie.R")
source("alcatuire_disc.R")
source("discuri_clasamente.R")
source("realizare_disc.R")
source("vanzari_totale_tari.R")
formatii <- formatii("https://en.wikipedia.org/wiki/Iron_Maiden_discography")
tari <- tari("https://en.wikipedia.org/wiki/Iron_Maiden_discography")
muzicieni <- muzicieni()
discografie <- discografie()
alcatuire_disc <- alcatuire_disc(specChar = "–")
discuri_clasamente <- discuri_clasamente("https://en.wikipedia.org/wiki/Iron_Maiden_discography")
realizare_disc = realizare_disc(specChar = "–")
vanzari_totale_tari <- vanzari_totale_tari("https://www.ukmix.org/forums/viewtopic.php?t=39069")
###########################
###########################
###### DATA BASE PART #####
###########################
###########################
# Loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# Creates a connection to the postgres database
con <- dbConnect(drv, dbname = "rock2019ro",
host = "localhost", port = 5432,
user = "postgres", password = "sl150793")
# Insert data into tari table
dbWriteTable(con, "tari",
value = tari, append = TRUE, row.names = FALSE)
# Insert data into muzicieni table
dbWriteTable(con, "muzicieni",
value = muzicieni, append = TRUE, row.names = FALSE)
# Insert data into formatii table
dbWriteTable(con, "formatii",
value = formatii, append = TRUE, row.names = FALSE)
# Insert data into discografie table
dbWriteTable(con, "discografie",
value = discografie, append = TRUE, row.names = FALSE)
# Insert data into alcatuire_disc table
dbWriteTable(con, "alcatuire_disc",
value = alcatuire_disc, append = TRUE, row.names = FALSE)
# Change titlu_disc into id_disc
discuri_clasamente <- discuri_clasamente %>%
inner_join(discografie, by = c("titlu_disc" = "titlu_disc")) %>%
select(id_disc, cod_tara, cea_mai_buna_clasare, comentarii)
# Insert data into discuri_clasamente table
dbWriteTable(con, "discuri_clasamente",
value = discuri_clasamente, append = TRUE, row.names = FALSE)
# Insert data into vanzari_totale_tari table
dbWriteTable(con, "vanzari_totale_tari",
value = vanzari_totale_tari, append = TRUE, row.names = FALSE)
# Insert data into realizare_disc table
dbWriteTable(con, "realizare_disc",
value = realizare_disc, append = TRUE, row.names = FALSE)
# Close the connection
dbDisconnect(con)
shiny::runApp('aplicatieWebProiect')
